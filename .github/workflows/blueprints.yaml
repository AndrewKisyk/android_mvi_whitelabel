name: blueprints
env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: MVI_Whitelabel
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      #  test:
      #    needs: build
      #    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
      #    timeout-minutes: 30
      #    strategy:
      #      matrix:
      #        api-level: [23, 29]
      #
      #    steps:
      #      - name: Checkout
      #        uses: actions/checkout@v2
      #
      #      - name: Copy CI gradle.properties
      #        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      #
      #      - name: Set up JDK 11
      #        uses: actions/setup-java@v1
      #        with:
      #          java-version: 11
      #

      #
      #      - name: Upload test reports
      #        if: always()
      #        uses: actions/upload-artifact@v2
      #        with:
      #          name: test-reports
      #          path: app/build/reports/

      #
      #  gradleManagedVirtualDevicesTest:
      #    needs: build
      #    runs-on: macos-latest
      #    timeout-minutes: 30
      #
      #    steps:
      #      - name: Checkout
      #        uses: actions/checkout@v2
      #
      #      - name: Copy CI gradle.properties
      #        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      #
      #      - name: Set up JDK 11
      #        uses: actions/setup-java@v1
      #        with:
      #          java-version: 11

      # Needed to accept licenses
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      #      - name: Generate cache key for Gradle cache
      #        run: ./scripts/checksum.sh $SAMPLE_PATH checksum.txt
      #
      #      - uses: actions/cache@v2
      #        with:
      #          path: |
      #            ~/.gradle/caches/modules-*
      #            ~/.gradle/caches/jars-*
      #            ~/.gradle/caches/build-cache-*
      #          key: gradle-${{ hashFiles('checksum.txt') }}

      #      - name: Cache pixel2api30 system image
      #        uses: actions/cache@v2
      #        with:
      #          path: |
      #            ~/.android/gradle/avd/dev30_aosp-atd_x86_Pixel_2.avd.*
      #          key: pixel2api30
      #
      #      - name: Cache pixel2api27 system image
      #        uses: actions/cache@v2
      #        with:
      #          path: ~/.android/gradle/avd/dev27_aosp_x86_Pixel_2.*
      #          key: pixel2api27
      #
      #      - name: Cache nexus9api29 system image
      #        uses: actions/cache@v2
      #        with:
      #          path: ~/.android/gradle/avd/dev29_aosp_x86_Nexus_9.*
      #          key: nexus9api29

      #      - name: Run all tests pixel 2 api 27 ATD
      #        working-directory: ${{ env.SAMPLE_PATH }}
      #        run: ./gradlew pixel2api27atdMockDebugAndroidTest
      #
      #      - name: Run all tests nexus 9 api 29 ATD
      #        working-directory: ${{ env.SAMPLE_PATH }}
      #        run: ./gradlew nexus9api29atdMockDebugAndroidTest

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: app/build/reports/

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK Debug
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ github.event.repository.updated_at.replace(/[:]/g, '-') }} - ${{ env.playstore_name }} - APK(s) debug generated
          path: app/build/outputs/apk/debug/app-debug.apk


#      - name: Upload test reports
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: test-reports
#          path: ./app/build/reports/androidTests/managedDevice/
